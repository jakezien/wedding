{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/image.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/zoetrope.png","webpack:///./src/components/seo.js","webpack:///./src/components/Container.js","webpack:///./src/components/Zoetrope.js","webpack:///./src/components/header.js","webpack:///./src/components/Footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","Image","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","fluid","placeholderImage","childImageSharp","_public_static_d_3138347921_json__WEBPACK_IMPORTED_MODULE_0__","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","p","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf","Container","react_default","id","class","styles","container","className","Zoetrope","imgWrap","src","image","alt","Header","siteHeader","components_Zoetrope","components_Container","siteTitle","Footer","siteFooter","ReactGA","initialize","Layout","gatsby_browser_entry","Fragment","header","components_Footer","_755544856","node"],"mappings":"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","file":"component---src-pages-404-js-0a9fcf32ac3afd1eb8e7.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst Image = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"19.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 300) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\nexport default Image\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/zoetrope-e0bbc307db44ed3f74dbffad185e3eba.png\";","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport styles from \"./Container.module.styl\"\n\nconst Container = ( props ) => (\n  <div id={props.id} class={styles.container + (props.className ? \" \" + props.className : '')}>\n    {props.children}\n  </div>\n)\n\nexport default Container","import React from \"react\"\nimport styles from \"./Zoetrope.module.styl\"\nimport image from '../images/zoetrope.png'\n\n\nconst Zoetrope = () => (\n  <div className={styles.container}>\n    <div className={styles.imgWrap}>\n      <img src={image} alt=\"zoetrope\"/>\n    </div>\n    {/*<div className={styles.wheel}></div>*/}\n    {/*<div className={styles.cover}>A&J</div>*/}\n  </div>\n)\n\nexport default Zoetrope","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport Container from \"./Container\"\nimport styles from \"./header.module.styl\"\nimport Zoetrope from \"./Zoetrope\"\n\n\nconst Header = ( props ) => (\n  <header id={styles.siteHeader}>\n    <Zoetrope/>\n    <Container>\n      <h1>{props.siteTitle}</h1>\n    </Container> \n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: `Anna & Jake's Wedding`,\n}\n\nexport default Header","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport Image from \"../components/image\"\nimport Container from \"../components/Container\"\nimport styles from \"./Footer.module.styl\"\n\n\nconst Footer = () => (\n  <footer id={styles.siteFooter}>\n    <Container>\n      Footer!\n    </Container>\n  </footer>\n)\n\nexport default Footer\n\n \n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport \"./base.css\"\nimport \"./fonts.css\"\nimport \"./typography.styl\"\nimport \"./layout.styl\"\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport Container from \"./Container\"\nimport Footer from \"./Footer\"\n\nimport ReactGA from 'react-ga';\nReactGA.initialize('UA-137874975-1');\n// ReactGA.pageview(window.location.pathname + window.location.search);\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <Container>{children}</Container>\n        <Footer />\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n\n"],"sourceRoot":""}