{"version":3,"sources":["webpack:///./src/components/event.js","webpack:///./src/components/accomodations.js","webpack:///./src/components/nyc.js","webpack:///./src/components/registry.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/image.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Event","react_default","a","createElement","id","class","Accomodations","_ref","reservationURL","href","propTypes","PropTypes","string","defaultProps","NYC","Registry","storeURL","zolaURL","IndexPage","layout","seo","title","keywords","components_event","accomodations","nyc","registry","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","object","isRequired","func","Image","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","fluid","placeholderImage","childImageSharp","_public_static_d_2011440971_json__WEBPACK_IMPORTED_MODULE_0__","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","array","arrayOf","Header","siteTitle","components_image","gatsby_browser_entry","to","Layout","Fragment","header","style","margin","maxWidth","padding","paddingTop","Date","getFullYear","_755544856","node"],"mappings":"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","file":"component---src-pages-index-js-d19f8d4617a0d5963322.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport Image from \"../components/image\"\n\nconst Event = () => (\n  <section id=\"event\">\n    <h2>The Event</h2>\n    <div class=\"left\">\n      <p>Meet us at The Prospect Park Boathouse at 5:30 PM for the ceremony.<br/>The reception will follow.</p>\n      <p>Dress is formal. The boathouse has cobbled floors, so please choose your heels carefully.</p>\n    </div>\n    <div class=\"right\">\n      \n    </div>\n  </section>\n)\n\nexport default Event\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport Image from \"../components/image\"\n\nconst Accomodations = ({ reservationURL }) => (\n  <section id=\"accomodations\">\n    <h2>Accomodations</h2>\n    <div class=\"left\">\n      <p>We have reserved a room block at The Beekman Hotel in Manhattan, at the base of the Brooklyn Bridge.</p>\n      <p><a href={reservationURL}>Reserve a room</a></p>\n    </div>\n    <div class=\"right\">\n      \n    </div>\n  </section>\n)\n\nAccomodations.propTypes = {\n  reservationURL: PropTypes.string,\n}\n\nAccomodations.defaultProps = {\n  reservationURL: `http://bit.do/annajakehotel`\n}\n\nexport default Accomodations\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport Image from \"../components/image\"\n\nconst NYC = (reservationURL) => (\n  <section id=\"nyc\">\n    <h2>NYC</h2>\n    <div class=\"left\">\n\n    </div>\n    <div class=\"right\">\n      \n    </div>\n  </section>\n)\n\nNYC.propTypes = {\n  reservationURL: PropTypes.string,\n}\n\nNYC.defaultProps = {\n  reservationURL: `Anna & Jake's Wedding`,\n}\n\nexport default NYC\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport Image from \"../components/image\"\n\nconst Registry = (reservationURL) => (\n  <section id=\"registry\">\n    <h2>Registry</h2>\n    <div class=\"left\">\n      <p>Thanks for considering a gift! Your presence is plenty. But if you insist, weâ€™ve registered at Crate and Barrel and Zola.</p>\n    </div>\n    <div class=\"right\">\n      \n    </div>\n  </section>\n)\n\nRegistry.propTypes = {\n  storeURL: PropTypes.string,\n  zolaURL: PropTypes.string,\n}\n\nRegistry.defaultProps = {\n  storeURL: `store`,\n  zolaURL: `zola`,\n}\n\nexport default Registry\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Image from \"../components/image\"\nimport SEO from \"../components/seo\"\n\nimport Event from \"../components/event\"\nimport Accomodations from \"../components/accomodations\"\nimport NYC from \"../components/nyc\"\nimport Registry from \"../components/registry\"\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Anna and Jake's Wedding\" keywords={[`Anna`, `Jake`, `Ewing`, `Zien`, `wedding`, `Brooklyn`, `Boathouse`]} />\n\n    <Event/>\n    <Accomodations/>\n    <NYC/>\n    <Registry/>\n\n    {/*<Link to=\"/page-2/\">Go to page 2</Link>*/}\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst Image = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"gatsby-astronaut.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 300) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\nexport default Image\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport Image from \"../components/image\"\nimport \"./header.module.styl\"\n\n\nconst Header = ({ siteTitle }) => (\n  <header>\n    <div id=\"poop\">\n      <Image />\n      <h1>{siteTitle}</h1>\n    </div>\n    <nav>\n      <Link to=\"/\">The Event</Link>\n      <Link to=\"#accomodations\">Accomodations</Link>\n      <Link to=\"#nyc\">Our NYC Favorites</Link>\n      <Link to=\"#registry\">Registry</Link>\n    </nav>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: `Anna & Jake's Wedding`,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer>\n            Â© {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}